import time
from wxauto import WeChat
from openai import OpenAI


class WeChatAutoReplyBot:
    def __init__(self, style, max_word=50):
        # 初始化微信对象
        self.wx = WeChat()
        self.api_key = "Your api key"
        self.base_url = "https://api.siliconflow.cn/v1"
        self.style = style
        self.max_word = max_word

    def auto_reply(self, friend, message_content):
        """
        Automatic reply function, used to send reply messages to specified friends。

        Args:
            friend (str): Friend's WeChat name。
            message_content (str): Message content sent by friends。
        """
        print("Current message content:", message_content)
        print(f"Switch to the chat window with {friend}")
        self.wx.ChatWith(friend)
        reply_content = self.deepseek_response(message_content, self.style)
        print(f"Based on the current message: {message_content} --- Reply: {reply_content}")
        self.wx.SendMsg(reply_content)

    def get_current_chat(self):
        """
        Get the name of the current chat window.

        Returns:
            str: The name of the current chat window. If there is no conversation, return None。
        """
        session_dict = self.wx.GetSessionList()
        if not session_dict:
            print("No sessions found. Please make sure the WeChat client is logged in and there are sessions.")
            return None
        else:
            for chat, value in session_dict.items():
                if value > 0 and chat:
                    print(f"Current chat window: {chat}")
                    return chat

    def deepseek_response(self, query, style):
        """
        Generate reply content using DeepSeek model。

        Args:
            query (str): User's query content。
            style (str): Reply style
            For example, Taiwanese cute girls, professional customer service, classical Chinese, etc。

        Returns:
                str: Reply content generated by Deepseek。
        """
        max_reply_content = f"回复内容在{self.max_word}字内。"
        client = OpenAI(api_key=self.api_key, base_url=self.base_url)
        response = client.chat.completions.create(
            model='deepseek-ai/DeepSeek-V3',
            messages=[
                {"role": "system", "content": f"你是一个{style},要以{style}的风格进行回复"},
                {'role': 'user', 'content': f"{query},{max_reply_content}"}
            ],
            stream=True,
            temperature=0.6,
            top_p=0.95
        )
        wx_response = ""
        for chunk in response:
            if hasattr(chunk, "choices") and chunk.choices:
                choice = chunk.choices[0]
                if hasattr(choice, "delta") and choice.delta.content:
                    wx_response += choice.delta.content
        return wx_response

    def start_listening(self):
        """
        Start monitoring WeChat messages and automatically reply。
        """
        print("Start listening for messages...")
        final_msg = None
        while True:
            try:
                chat = self.get_current_chat()
                if chat:
                    self.wx.ChatWith(chat)
                    msg_list = self.wx.GetAllMessage()
                    latest_msg = msg_list[-1]
                    if latest_msg.content != final_msg and latest_msg.info[0] != "Self":
                        message_content = latest_msg[1]
                        self.auto_reply(chat, message_content)
                    final_msg = self.wx.GetAllMessage()[-1].content
                time.sleep(1)
            except KeyboardInterrupt:
                print("Stop listening for messages")
            except IndexError:
                print("Please check the status of the WeChat client。")


if __name__ == "__main__":
    bot = WeChatAutoReplyBot(style="台湾妹子")
    bot.start_listening()
